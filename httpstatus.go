package globalerrors

import "net/http"

var httpStatusCodesMap = map[error]int{
	BadRequest:                    http.StatusBadRequest,
	Unauthorized:                  http.StatusUnauthorized,
	PaymentRequired:               http.StatusPaymentRequired,
	Forbidden:                     http.StatusForbidden,
	NotFound:                      http.StatusNotFound,
	MethodNotAllowed:              http.StatusMethodNotAllowed,
	NotAcceptable:                 http.StatusNotAcceptable,
	ProxyAuthRequired:             http.StatusProxyAuthRequired,
	RequestTimeout:                http.StatusRequestTimeout,
	Conflict:                      http.StatusConflict,
	Gone:                          http.StatusGone,
	LengthRequired:                http.StatusLengthRequired,
	PreconditionFailed:            http.StatusPreconditionFailed,
	RequestEntityTooLarge:         http.StatusRequestEntityTooLarge,
	RequestURITooLong:             http.StatusRequestURITooLong,
	UnsupportedMediaType:          http.StatusUnsupportedMediaType,
	RequestedRangeNotSatisfiable:  http.StatusRequestedRangeNotSatisfiable,
	ExpectationFailed:             http.StatusExpectationFailed,
	Teapot:                        http.StatusTeapot,
	MisdirectedRequest:            http.StatusMisdirectedRequest,
	UnprocessableEntity:           http.StatusUnprocessableEntity,
	Locked:                        http.StatusLocked,
	FailedDependency:              http.StatusFailedDependency,
	TooEarly:                      http.StatusTooEarly,
	UpgradeRequired:               http.StatusUpgradeRequired,
	PreconditionRequired:          http.StatusPreconditionRequired,
	TooManyRequests:               http.StatusTooManyRequests,
	RequestHeaderFieldsTooLarge:   http.StatusRequestHeaderFieldsTooLarge,
	UnavailableForLegalReasons:    http.StatusUnavailableForLegalReasons,
	InternalServerError:           http.StatusInternalServerError,
	NotImplemented:                http.StatusNotImplemented,
	BadGateway:                    http.StatusBadGateway,
	ServiceUnavailable:            http.StatusServiceUnavailable,
	GatewayTimeout:                http.StatusGatewayTimeout,
	HTTPVersionNotSupported:       http.StatusHTTPVersionNotSupported,
	VariantAlsoNegotiates:         http.StatusVariantAlsoNegotiates,
	InsufficientStorage:           http.StatusInsufficientStorage,
	LoopDetected:                  http.StatusLoopDetected,
	NotExtended:                   http.StatusNotExtended,
	NetworkAuthenticationRequired: http.StatusNetworkAuthenticationRequired,
}
